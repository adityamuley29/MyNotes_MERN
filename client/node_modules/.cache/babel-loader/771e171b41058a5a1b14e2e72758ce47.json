{"ast":null,"code":"var _jsxFileName = \"D:\\\\Devlopment\\\\React\\\\mynotes\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { darkMode, lightMode } from \"../actions/index\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { Link, useParams } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = props => {\n  _s();\n\n  const [toggle, setToggle] = useState(false);\n  const dispatched = useDispatch();\n  const {\n    addToast\n  } = useToasts();\n  const {\n    user,\n    logoutUser\n  } = useContext(AuthContext);\n  const {\n    match\n  } = useParams();\n  console.log(match);\n\n  const triggerToggle = () => {\n    setToggle(!toggle);\n    toggleMode(toggle);\n  };\n\n  let toggleMode = mode => {\n    if (mode === false) {\n      dispatched(darkMode());\n      addToast(\"Dark Mode enabled ðŸ¥³\", {\n        appearance: \"success\",\n        autoDismiss: true\n      });\n    } else {\n      dispatched(lightMode());\n      addToast(\"Dark Mode disabled ðŸ¥³\", {\n        appearance: \"success\",\n        autoDismiss: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"My Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: triggerToggle,\n        className: `wrg-toggle ${toggle ? \"wrg-toggle--checked\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrg-toggle-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrg-toggle-check\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83C\\uDF1C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrg-toggle-uncheck\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83C\\uDF1E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrg-toggle-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"wrg-toggle-input\",\n          type: \"checkbox\",\n          \"aria-label\": \"Toggle Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), user ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-button\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hello, \", user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-button\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              onClick: logoutUser,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-button\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"R7/J+VgIyGO7QydtL0Ybz2gj3DU=\", false, function () {\n  return [useDispatch, useToasts, useParams];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["D:/Devlopment/React/mynotes/src/components/Navbar.js"],"names":["React","Fragment","useContext","useState","useDispatch","darkMode","lightMode","useToasts","Link","useParams","AuthContext","Navbar","props","toggle","setToggle","dispatched","addToast","user","logoutUser","match","console","log","triggerToggle","toggleMode","mode","appearance","autoDismiss","username"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { darkMode, lightMode } from \"../actions/index\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nconst Navbar = (props) => {\r\n  const [toggle, setToggle] = useState(false);\r\n  const dispatched = useDispatch();\r\n  const { addToast } = useToasts();\r\n  const { user,logoutUser } = useContext(AuthContext);\r\n  const {match} = useParams()\r\n\r\n  console.log(match);\r\n\r\n  const triggerToggle = () => {\r\n    setToggle(!toggle);\r\n    toggleMode(toggle);\r\n  };\r\n\r\n  let toggleMode = (mode) => {\r\n    if (mode === false) {\r\n      dispatched(darkMode());\r\n      addToast(\"Dark Mode enabled ðŸ¥³\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n    } else {\r\n      dispatched(lightMode());\r\n      addToast(\"Dark Mode disabled ðŸ¥³\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h1>\r\n        <Link to={\"/\"}>My Notes</Link>\r\n      </h1>\r\n\r\n      {/* dark mode button start here */}\r\n      <div className=\"navbar-buttons\">\r\n        <div\r\n          onClick={triggerToggle}\r\n          className={`wrg-toggle ${toggle ? \"wrg-toggle--checked\" : \"\"}`}\r\n        >\r\n          <div className=\"wrg-toggle-container\">\r\n            <div className=\"wrg-toggle-check\">\r\n              <span>ðŸŒœ</span>\r\n            </div>\r\n\r\n            <div className=\"wrg-toggle-uncheck\">\r\n              <span>ðŸŒž</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"wrg-toggle-circle\"></div>\r\n          <input\r\n            className=\"wrg-toggle-input\"\r\n            type=\"checkbox\"\r\n            aria-label=\"Toggle Button\"\r\n          />\r\n        </div>\r\n\r\n        {user ? (\r\n          <Fragment>\r\n            <div className=\"auth-button\">\r\n              <h3>Hello, {user.username}</h3>\r\n            </div>\r\n            <div className=\"auth-button\">\r\n              <h3>\r\n                <Link to={\"/\"} onClick={logoutUser}>Logout</Link>\r\n              </h3>\r\n            </div>\r\n          </Fragment>\r\n        ) : (\r\n          <div className=\"auth-button\"> \r\n            <h3>\r\n              <Link to={\"/login\"}>Login</Link>\r\n            </h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}