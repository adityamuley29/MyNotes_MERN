{"ast":null,"code":"var _jsxFileName = \"D:\\\\Devlopment\\\\React\\\\mynotes\\\\src\\\\pages\\\\RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_DATA = {\n  name: \"\",\n  email: \"\",\n  password: \"\"\n};\n\nconst RegisterPage = () => {\n  _s();\n\n  const [user, setUser] = useState(INITIAL_DATA);\n  const {\n    addToast\n  } = useToasts();\n  const history = useNavigate();\n\n  const onSubmitHandeler = async e => {\n    e.preventDefault();\n    const response = await fetch(\"/api/register/\", {\n      method: \"POST\",\n      headers: {\n        Authorization: localStorage.getItem(\"authToken\") ? \"JWT \" + localStorage.getItem(\"authToken\") : null,\n        \"Content-Type\": \"application/json\",\n        accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        name: user.name,\n        email: user.email,\n        password: user.password\n      })\n    }); // const data = await response.json()\n\n    if (response.status === 200) {\n      setUser(INITIAL_DATA);\n      addToast(`Registration Successfull ðŸ¥³`, {\n        appearance: \"success\",\n        autoDismiss: true\n      });\n      history(\"/\");\n    } else {\n      addToast(`Smo ðŸ¥³`, {\n        appearance: \"error\",\n        autoDismiss: true\n      });\n    }\n\n    console.log(\"form submited\");\n  };\n\n  const handleChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginForm-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"formTitle\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"loginForm\",\n      onSubmit: e => onSubmitHandeler(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        className: \"loginInput\",\n        onChange: handleChange,\n        placeholder: \"Enter name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        className: \"loginInput\",\n        onChange: handleChange,\n        placeholder: \"Enter email \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"loginInput\",\n        onChange: handleChange,\n        placeholder: \"Enter password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginInput\",\n        id: \"login-btn\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Aldready have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \" Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterPage, \"Rh9pB1taRohDkv/C2dV1PVtwSRI=\", false, function () {\n  return [useToasts, useNavigate];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["D:/Devlopment/React/mynotes/src/pages/RegisterPage.js"],"names":["React","useState","Link","useNavigate","useToasts","INITIAL_DATA","name","email","password","RegisterPage","user","setUser","addToast","history","onSubmitHandeler","e","preventDefault","response","fetch","method","headers","Authorization","localStorage","getItem","accept","body","JSON","stringify","status","appearance","autoDismiss","console","log","handleChange","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst INITIAL_DATA = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst RegisterPage = () => {\r\n  const [user, setUser] = useState(INITIAL_DATA);\r\n  const { addToast } = useToasts();\r\n  const history = useNavigate();\r\n\r\n  const onSubmitHandeler = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch(\"/api/register/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"authToken\")\r\n          ? \"JWT \" + localStorage.getItem(\"authToken\")\r\n          : null,\r\n        \"Content-Type\": \"application/json\",\r\n        accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: user.name,\r\n        email: user.email,\r\n        password: user.password,\r\n      }),\r\n    });\r\n    // const data = await response.json()\r\n    if(response.status === 200){\r\n      setUser(INITIAL_DATA)\r\n      addToast(`Registration Successfull ðŸ¥³`, {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n      history(\"/\");\r\n    }else{\r\n      addToast(`Smo ðŸ¥³`, {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n    console.log(\"form submited\");\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginForm-container\">\r\n      <span id=\"formTitle\">Register</span>\r\n      <form className=\"loginForm\" onSubmit={(e) => onSubmitHandeler(e)}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"loginInput\"\r\n          onChange={handleChange}\r\n          placeholder=\"Enter name \"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          className=\"loginInput\"\r\n          onChange={handleChange}\r\n          placeholder=\"Enter email \"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          className=\"loginInput\"\r\n          onChange={handleChange}\r\n          placeholder=\"Enter password \"\r\n        />\r\n        <button className=\"loginInput\" id=\"login-btn\" type=\"submit\">\r\n          Register\r\n        </button>\r\n      </form>\r\n      <p>\r\n        Aldready have an account?<Link to={\"/login\"}> Login</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"]},"metadata":{},"sourceType":"module"}