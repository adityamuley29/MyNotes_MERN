{"ast":null,"code":"var _jsxFileName = \"D:\\\\Devlopment\\\\React\\\\mynotes\\\\src\\\\context\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [authToken, setAuthToken] = useState(null);\n  const {\n    addToast\n  } = useToasts();\n\n  let loginUser = async e => {\n    e.preventDefault();\n    console.log(\"form submitted\");\n    let response = await fetch(\"/api/token/\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: e.target.email.value,\n        password: e.target.password.value\n      })\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      addToast(`Note created üëç`, {\n        appearance: \"success\",\n        autoDismiss: true\n      });\n    } else {\n      addToast(`Somthing went wrong`, {\n        appearance: \"error\",\n        autoDismiss: true\n      });\n    }\n  };\n\n  let contextData = {\n    loginUser: loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"mV4nuUzzbGHB8D7lW/IDlMK4krk=\", false, function () {\n  return [useToasts];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/Devlopment/React/mynotes/src/context/AuthContext.js"],"names":["React","createContext","useState","useToasts","AuthContext","AuthProvider","children","user","setUser","authToken","setAuthToken","addToast","loginUser","e","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","email","target","value","password","data","json","status","appearance","autoDismiss","contextData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,SAAT,QAA0B,2BAA1B;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEA,eAAeG,WAAf;AAEA,OAAO,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAES,IAAAA;AAAF,MAAeR,SAAS,EAA9B;;AAEA,MAAIS,SAAS,GAAG,MAAOC,CAAP,IAAa;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AACxCC,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAF+B;AAMxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAEX,CAAC,CAACY,MAAF,CAASD,KAAT,CAAeE,KAAxB;AAA+BC,QAAAA,QAAQ,EAAEd,CAAC,CAACY,MAAF,CAASE,QAAT,CAAkBD;AAA3D,OAAf;AANkC,KAAhB,CAA1B;AAQA,QAAIE,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAT,EAAjB;;AACA,QAAGZ,QAAQ,CAACa,MAAT,KAAoB,GAAvB,EAA2B;AACvBnB,MAAAA,QAAQ,CAAE,iBAAF,EAAmB;AACvBoB,QAAAA,UAAU,EAAC,SADY;AAEvBC,QAAAA,WAAW,EAAC;AAFW,OAAnB,CAAR;AAIH,KALD,MAKK;AACDrB,MAAAA,QAAQ,CAAE,qBAAF,EAAuB;AAC3BoB,QAAAA,UAAU,EAAC,OADgB;AAE3BC,QAAAA,WAAW,EAAC;AAFe,OAAvB,CAAR;AAIH;AACF,GAvBD;;AAyBA,MAAIC,WAAW,GAAG;AAChBrB,IAAAA,SAAS,EAAEA;AADK,GAAlB;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEqB,WAA7B;AAAA,cAA2C3B;AAA3C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CApCM;;GAAMD,Y;UAGUF,S;;;KAHVE,Y","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [authToken, setAuthToken] = useState(null);\r\n  const { addToast } = useToasts();\r\n\r\n  let loginUser = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"form submitted\");\r\n    let response = await fetch(\"/api/token/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ email: e.target.email.value, password: e.target.password.value }),\r\n    });\r\n    let data = await response.json()\r\n    if(response.status === 200){\r\n        addToast(`Note created üëç`,{\r\n            appearance:\"success\",\r\n            autoDismiss:true\r\n          })\r\n    }else{\r\n        addToast(`Somthing went wrong`,{\r\n            appearance:\"error\",\r\n            autoDismiss:true\r\n          })\r\n    }\r\n  };\r\n\r\n  let contextData = {\r\n    loginUser: loginUser,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}