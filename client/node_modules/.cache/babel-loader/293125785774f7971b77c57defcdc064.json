{"ast":null,"code":"var _jsxFileName = \"D:\\\\Devlopment\\\\React\\\\mynotes\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport NotesListPage from \"./pages/NotesListPage\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport NotePage from \"./pages/NotePage\";\nimport Navbar from \"./components/Navbar\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { darkMode, lightMode } from \"./actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const myState = useSelector(state => state.toggleMode);\n  const dispatched = useDispatch();\n  console.log(myState);\n\n  let toggleMode = () => {\n    if (isDarkMode === false) {\n      // setIsDarkMode(true);\n      dispatched(darkMode());\n    } else {\n      // setIsDarkMode(false);\n      dispatched(lightMode());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isDarkMode === false ? \"container\" : \"container dark\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        isDarkMode: myState,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(NotesListPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 38\n            }, this),\n            exact: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/note/:id\",\n            element: /*#__PURE__*/_jsxDEV(NotePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DeUhfn9yLNSuFnMSSOjkYZeBZco=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Devlopment/React/mynotes/src/App.js"],"names":["Header","NotesListPage","BrowserRouter","Router","Route","Routes","NotePage","Navbar","useState","useDispatch","useSelector","darkMode","lightMode","App","isDarkMode","setIsDarkMode","myState","state","toggleMode","dispatched","console","log"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,iBAAjC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMQ,OAAO,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,UAAlB,CAA3B;AACA,QAAMC,UAAU,GAAGV,WAAW,EAA9B;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;;AACA,MAAIE,UAAU,GAAG,MAAM;AACrB,QAAIJ,UAAU,KAAK,KAAnB,EAA0B;AACxB;AACAK,MAAAA,UAAU,CAACR,QAAQ,EAAT,CAAV;AAED,KAJD,MAIO;AACL;AACAQ,MAAAA,UAAU,CAACP,SAAS,EAAV,CAAV;AACD;AACF,GATD;;AAUA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEE,UAAU,KAAK,KAAf,GAAuB,WAAvB,GAAqC,gBAArD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,UAAU,EAAEE,OAApB;AAA6B,QAAA,UAAU,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BAEE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,oBAAzB;AAA4C,YAAA,KAAK;AAAjD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,WAAZ;AAAwB,YAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA9BQL,G;UAESH,W,EACGD,W;;;KAHZI,G;AAgCT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport Header from \"./components/Header\";\nimport NotesListPage from \"./pages/NotesListPage\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport NotePage from \"./pages/NotePage\";\nimport Navbar from \"./components/Navbar\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {darkMode,lightMode} from \"./actions/index\"\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const myState = useSelector((state) => state.toggleMode);\n  const dispatched = useDispatch()\n\n  console.log(myState);\n  let toggleMode = () => {\n    if (isDarkMode === false) {\n      // setIsDarkMode(true);\n      dispatched(darkMode())\n\n    } else {\n      // setIsDarkMode(false);\n      dispatched(lightMode())\n    }\n  };\n  return (\n    <Router>\n      <div className={isDarkMode === false ? \"container\" : \"container dark\"}>\n        <Navbar isDarkMode={myState} toggleMode={toggleMode} />\n        <div className=\"app\">\n          {/* <Header /> */}\n          <Routes>\n            <Route path=\"/\" element={<NotesListPage />} exact />\n            <Route path=\"/note/:id\" element={<NotePage />} />\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}