{"ast":null,"code":"var _jsxFileName = \"D:\\\\Devlopment\\\\React\\\\mynotes\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { darkMode, lightMode } from \"../actions/index\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { Link, useParams } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\nimport jwtDecode from \"jwt-decode\";\nimport DarkModeButton from \"./DarkModeButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = props => {\n  _s();\n\n  const [toggle, setToggle] = useState(false);\n  const dispatched = useDispatch();\n  const {\n    addToast\n  } = useToasts();\n  const {\n    user,\n    logoutUser\n  } = useContext(AuthContext);\n  const currentPath = window.location.pathname; // const currentUser = jwtDecode(user.access)\n\n  const triggerToggle = () => {\n    setToggle(!toggle);\n    toggleMode(toggle);\n  };\n\n  let toggleMode = mode => {\n    if (mode === false) {\n      dispatched(darkMode());\n      addToast(\"Dark Mode enabled ðŸ¥³\", {\n        appearance: \"success\",\n        autoDismiss: true\n      });\n    } else {\n      dispatched(lightMode());\n      addToast(\"Dark Mode disabled ðŸ¥³\", {\n        appearance: \"success\",\n        autoDismiss: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"My Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(DarkModeButton, {\n        triggerToggle: triggerToggle,\n        toggle: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), user ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-button\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hello, \", user.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-button\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              onClick: logoutUser,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : currentPath === \"/login\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-button\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-button\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"0c83T02RCYQQ13el7VXwY2d14Uk=\", false, function () {\n  return [useDispatch, useToasts];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["D:/Devlopment/React/mynotes/src/components/Navbar.js"],"names":["React","Fragment","useContext","useState","useDispatch","darkMode","lightMode","useToasts","Link","useParams","AuthContext","jwtDecode","DarkModeButton","Navbar","props","toggle","setToggle","dispatched","addToast","user","logoutUser","currentPath","window","location","pathname","triggerToggle","toggleMode","mode","appearance","autoDismiss","name"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { darkMode, lightMode } from \"../actions/index\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport DarkModeButton from \"./DarkModeButton\";\r\n\r\nconst Navbar = (props) => {\r\n  const [toggle, setToggle] = useState(false);\r\n  const dispatched = useDispatch();\r\n  const { addToast } = useToasts();\r\n  const { user, logoutUser } = useContext(AuthContext);\r\n\r\n  const currentPath = window.location.pathname;\r\n  // const currentUser = jwtDecode(user.access)\r\n\r\n  const triggerToggle = () => {\r\n    setToggle(!toggle);\r\n    toggleMode(toggle);\r\n  };\r\n\r\n  let toggleMode = (mode) => {\r\n    if (mode === false) {\r\n      dispatched(darkMode());\r\n      addToast(\"Dark Mode enabled ðŸ¥³\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n    } else {\r\n      dispatched(lightMode());\r\n      addToast(\"Dark Mode disabled ðŸ¥³\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h1>\r\n        <Link to={\"/\"}>My Notes</Link>\r\n      </h1>\r\n\r\n      {/* dark mode button start here */}\r\n      <div className=\"navbar-buttons\">\r\n        <DarkModeButton triggerToggle={triggerToggle} toggle={toggle} />\r\n\r\n        {user ? (\r\n          <Fragment>\r\n            <div className=\"auth-button\">\r\n              <h3>Hello, {user.name}</h3>\r\n            </div>\r\n            <div className=\"auth-button\">\r\n              <h3>\r\n                <Link to={\"/\"} onClick={logoutUser}>\r\n                  Logout\r\n                </Link>\r\n              </h3>\r\n            </div>\r\n          </Fragment>\r\n        ) : currentPath === \"/login\" ? (\r\n          <div className=\"auth-button\">\r\n            <h3>\r\n              <Link to={\"/register\"}>Register</Link>\r\n            </h3>\r\n          </div>\r\n        ) : (\r\n          <div className=\"auth-button\">\r\n            <h3>\r\n              <Link to={\"/login\"}>login</Link>\r\n            </h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}