{"ast":null,"code":"var _jsxFileName = \"D:\\\\Devlopment\\\\Web Devlopment\\\\MERN Projects\\\\My Notes\\\\client\\\\src\\\\pages\\\\NotesListPage.js\",\n    _s = $RefreshSig$();\n\nimport jwtDecode from \"jwt-decode\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport AddButton from \"../components/AddButton\";\nimport ListItem from \"../components/ListItem\";\nimport AuthContext from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotesListPage = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const {\n    user\n  } = useContext(AuthContext); // const currentUser = jwtDecode(user.access);\n\n  useEffect(() => {\n    getNotes();\n  }, []);\n\n  let getNotes = async () => {\n    let response = await fetch(`/api/fiternotes/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        createdBy: `${user.email}`\n      })\n    });\n    let data = await response.json(); // let filteredData = data.filter(data =>currentUser.email[0] === data.createdBy)\n    // console.log(currentUser);\n    // console.log(data);\n\n    setNotes(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"notes-title\",\n        children: \"\\u2636 Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"notes-count\",\n        children: notes.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        note: note\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotesListPage, \"K/hxhppskv1V09otT4rV7xqvLDo=\");\n\n_c = NotesListPage;\nexport default NotesListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesListPage\");","map":{"version":3,"sources":["D:/Devlopment/Web Devlopment/MERN Projects/My Notes/client/src/pages/NotesListPage.js"],"names":["jwtDecode","React","useContext","useEffect","useState","AddButton","ListItem","AuthContext","NotesListPage","notes","setNotes","user","getNotes","response","fetch","method","headers","body","JSON","stringify","createdBy","email","data","json","length","map","note","index"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAWT,UAAU,CAACK,WAAD,CAA3B,CAF0B,CAK1B;;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAKA,MAAIA,QAAQ,GAAG,YAAY;AAGzB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kBAAF,EAAqB;AAC7CC,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoC;AAK7CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,SAAS,EAAG,GAAET,IAAI,CAACU,KAAM;AAA3B,OAAf;AALuC,KAArB,CAA1B;AAQA,QAAIC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAjB,CAXyB,CAYzB;AACA;AACA;;AACAb,IAAAA,QAAQ,CAACY,IAAD,CAAR;AACD,GAhBD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,kBAA4Bb,KAAK,CAACe;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACGf,KAAK,CAACgB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAED;AAA5B,SAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF,eAUE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3CD;;GAAMnB,a;;KAAAA,a;AA6CN,eAAeA,aAAf","sourcesContent":["import jwtDecode from \"jwt-decode\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport AddButton from \"../components/AddButton\";\r\nimport ListItem from \"../components/ListItem\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nconst NotesListPage = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const { user } = useContext(AuthContext);\r\n\r\n\r\n  // const currentUser = jwtDecode(user.access);\r\n\r\n  useEffect(() => {\r\n    getNotes();\r\n  }, []);\r\n\r\n\r\n  let getNotes = async () => {\r\n    \r\n\r\n    let response = await fetch(`/api/fiternotes/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ createdBy: `${user.email}` }),\r\n    });\r\n\r\n    let data = await response.json();\r\n    // let filteredData = data.filter(data =>currentUser.email[0] === data.createdBy)\r\n    // console.log(currentUser);\r\n    // console.log(data);\r\n    setNotes(data);\r\n  };\r\n  return (\r\n    <div className=\"notes\">\r\n      <div className=\"notes-header\">\r\n        <h2 className=\"notes-title\">&#9782; Notes</h2>\r\n        <p className=\"notes-count\">{notes.length}</p>\r\n      </div>\r\n      <div className=\"notes-list\">\r\n        {notes.map((note, index) => (\r\n          <ListItem key={index} note={note} />\r\n        ))}\r\n      </div>\r\n      <AddButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesListPage;\r\n"]},"metadata":{},"sourceType":"module"}