{"ast":null,"code":"var _jsxFileName = \"D:\\\\Devlopment\\\\React\\\\mynotes\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { darkMode, lightMode } from \"../actions/index\";\nimport { ToastProvider, useToasts } from 'react-toast-notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = props => {\n  _s();\n\n  const [toggle, setToggle] = useState(false);\n  const dispatched = useDispatch();\n  const {\n    addToast\n  } = useToasts();\n\n  const triggerToggle = () => {\n    setToggle(!toggle);\n    toggleMode(toggle);\n  };\n\n  let toggleMode = mode => {\n    if (mode === false) {\n      dispatched(darkMode());\n      addToast(\"Dark Mode enabled ðŸ¥³\", {\n        appearance: \"success\",\n        autoDismiss: true,\n        PlacementType\n      });\n    } else {\n      dispatched(lightMode());\n      addToast(\"Dark Mode disabled ðŸ¥³\", {\n        appearance: \"success\",\n        autoDismiss: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: triggerToggle,\n      className: `wrg-toggle ${toggle ? \"wrg-toggle--checked\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrg-toggle-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrg-toggle-check\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF1C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrg-toggle-uncheck\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF1E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrg-toggle-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"wrg-toggle-input\",\n        type: \"checkbox\",\n        \"aria-label\": \"Toggle Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"wYCBdcbId37SuxGsI+V/dApwGhs=\", false, function () {\n  return [useDispatch, useToasts];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["D:/Devlopment/React/mynotes/src/components/Navbar.js"],"names":["React","useState","useDispatch","darkMode","lightMode","ToastProvider","useToasts","Navbar","props","toggle","setToggle","dispatched","addToast","triggerToggle","toggleMode","mode","appearance","autoDismiss","PlacementType"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,kBAApC;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,2BAAzC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMU,UAAU,GAAGT,WAAW,EAA9B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAeN,SAAS,EAA9B;;AAEA,QAAMO,aAAa,GAAG,MAAM;AAC1BH,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAK,IAAAA,UAAU,CAACL,MAAD,CAAV;AACD,GAHD;;AAKA,MAAIK,UAAU,GAAIC,IAAD,IAAU;AACzB,QAAIA,IAAI,KAAK,KAAb,EAAoB;AAClBJ,MAAAA,UAAU,CAACR,QAAQ,EAAT,CAAV;AACAS,MAAAA,QAAQ,CAAC,sBAAD,EAAyB;AAC/BI,QAAAA,UAAU,EAAE,SADmB;AAE/BC,QAAAA,WAAW,EAAE,IAFkB;AAG/BC,QAAAA;AAH+B,OAAzB,CAAR;AAKD,KAPD,MAOO;AACLP,MAAAA,UAAU,CAACP,SAAS,EAAV,CAAV;AACAQ,MAAAA,QAAQ,CAAC,uBAAD,EAA0B;AAChCI,QAAAA,UAAU,EAAE,SADoB;AAEhCC,QAAAA,WAAW,EAAE;AAFmB,OAA1B,CAAR;AAID;AACF,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AACE,MAAA,OAAO,EAAEJ,aADX;AAEE,MAAA,SAAS,EAAG,cAAaJ,MAAM,GAAG,qBAAH,GAA2B,EAAG,EAF/D;AAAA,8BAIE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAaE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,sBAAW;AAHb;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAvDD;;GAAMF,M;UAEeL,W,EACEI,S;;;KAHjBC,M;AAyDN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { darkMode, lightMode } from \"../actions/index\";\r\nimport { ToastProvider, useToasts } from 'react-toast-notifications';\r\n\r\nconst Navbar = (props) => {\r\n  const [toggle, setToggle] = useState(false);\r\n  const dispatched = useDispatch();\r\n  const { addToast } = useToasts();\r\n\r\n  const triggerToggle = () => {\r\n    setToggle(!toggle);\r\n    toggleMode(toggle);\r\n  };\r\n\r\n  let toggleMode = (mode) => {\r\n    if (mode === false) {\r\n      dispatched(darkMode());\r\n      addToast(\"Dark Mode enabled ðŸ¥³\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n        PlacementType\r\n      });\r\n    } else {\r\n      dispatched(lightMode());\r\n      addToast(\"Dark Mode disabled ðŸ¥³\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h1>My Notes</h1>\r\n\r\n      {/* dark mode button start here */}\r\n\r\n      <div\r\n        onClick={triggerToggle}\r\n        className={`wrg-toggle ${toggle ? \"wrg-toggle--checked\" : \"\"}`}\r\n      >\r\n        <div className=\"wrg-toggle-container\">\r\n          <div className=\"wrg-toggle-check\">\r\n            <span>ðŸŒœ</span>\r\n          </div>\r\n\r\n          <div className=\"wrg-toggle-uncheck\">\r\n            <span>ðŸŒž</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"wrg-toggle-circle\"></div>\r\n        <input\r\n          className=\"wrg-toggle-input\"\r\n          type=\"checkbox\"\r\n          aria-label=\"Toggle Button\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}