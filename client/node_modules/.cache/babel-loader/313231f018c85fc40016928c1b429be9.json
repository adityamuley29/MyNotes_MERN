{"ast":null,"code":"var _jsxFileName = \"D:\\\\Devlopment\\\\React\\\\mynotes\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { darkMode, lightMode } from \"./actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = props => {\n  _s();\n\n  const [toggle, setToggle] = useState(false);\n\n  const triggerToggle = () => {\n    setToggle(!toggle);\n  };\n\n  let toggleMode = () => {\n    if (isDarkMode === false) {\n      // setIsDarkMode(true);\n      dispatched(darkMode());\n    } else {\n      // setIsDarkMode(false);\n      dispatched(lightMode());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"My Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: triggerToggle,\n      className: `wrg-toggle ${props.mode ? \"wrg-toggle--checked\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrg-toggle-container\",\n        children: props.mode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrg-toggle-check\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF1C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrg-toggle-uncheck\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF1E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrg-toggle-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"wrg-toggle-input\",\n        type: \"checkbox\",\n        \"aria-label\": \"Toggle Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"KMOoc8w16Lq5ZnA3xKzfamBycFo=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["D:/Devlopment/React/mynotes/src/components/Navbar.js"],"names":["React","useState","darkMode","lightMode","Navbar","props","toggle","setToggle","triggerToggle","toggleMode","isDarkMode","dispatched","mode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,iBAAjC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMO,aAAa,GAAG,MAAM;AAC1BD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,MAAIG,UAAU,GAAG,MAAM;AACrB,QAAIC,UAAU,KAAK,KAAnB,EAA0B;AACxB;AACAC,MAAAA,UAAU,CAACT,QAAQ,EAAT,CAAV;AAED,KAJD,MAIO;AACL;AACAS,MAAAA,UAAU,CAACR,SAAS,EAAV,CAAV;AACD;AACF,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AACE,MAAA,OAAO,EAAEK,aADX;AAEE,MAAA,SAAS,EAAG,cAAaH,KAAK,CAACO,IAAN,GAAa,qBAAb,GAAqC,EAAG,EAFnE;AAAA,8BAIE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACGP,KAAK,CAACO,IAAN,gBACC;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,gBAKC;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cAJF,eAeE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,sBAAW;AAHb;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAhDD;;GAAMR,M;;KAAAA,M;AAkDN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {darkMode,lightMode} from \"./actions/index\"\r\n\r\nconst Navbar = (props) => {\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const triggerToggle = () => {\r\n    setToggle(!toggle);\r\n  };\r\n\r\n  let toggleMode = () => {\r\n    if (isDarkMode === false) {\r\n      // setIsDarkMode(true);\r\n      dispatched(darkMode())\r\n\r\n    } else {\r\n      // setIsDarkMode(false);\r\n      dispatched(lightMode())\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <span>My Notes</span>\r\n\r\n      {/* dark mode button start here */}\r\n\r\n      <div\r\n        onClick={triggerToggle}\r\n        className={`wrg-toggle ${props.mode ? \"wrg-toggle--checked\" : \"\"}`}\r\n      >\r\n        <div className=\"wrg-toggle-container\">\r\n          {props.mode ? (\r\n            <div className=\"wrg-toggle-check\">\r\n              <span>ðŸŒœ</span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"wrg-toggle-uncheck\">\r\n              <span>ðŸŒž</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"wrg-toggle-circle\"></div>\r\n        <input\r\n          className=\"wrg-toggle-input\"\r\n          type=\"checkbox\"\r\n          aria-label=\"Toggle Button\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}